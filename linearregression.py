# -*- coding: utf-8 -*-
"""LinearRegression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T5YTrVI6S8fYca1WVcd4XIR6yyMlnuef
"""

from sklearn.datasets import load_diabetes

#importing dataset
diab = load_diabetes()

diab

#defininf feature and label
X = diab['data']
y = diab['target']

#printing shapes
print(X.shape, y.shape)

import pandas as pd

#creating dataframe from X
df = pd.DataFrame(X, columns=diab.feature_names)

df

#adding 'progression' from y
df['progression'] = diab['target']

#showing head
df.head()

#showing dataframe info
df.isnull().sum()

#defining features
X = df.drop('progression',axis='columns')
#defining label
y = df['progression']

X

y

from sklearn.model_selection import train_test_split

#splitting
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5,random_state=42)

from sklearn.linear_model import LinearRegression

#fitting the model
reg = LinearRegression().fit(X_train, y_train)

reg

# Make predictions using the testing set
y_pred = reg.predict(X_test)

from sklearn.metrics import r2_score

# The coefficient of determination: 1 is perfect prediction
print("Coefficient of determination: %.2f" % r2_score(y_test, y_pred))

# The coefficients
print("Coefficients: \n", reg.coef_)

# The intercept
print("Coefficients: \n", reg.intercept_)

